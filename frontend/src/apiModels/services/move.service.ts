/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Move } from '../models/move';
import { postMoveCreate } from '../fn/move/post-move-create';
import { PostMoveCreate$Params } from '../fn/move/post-move-create';

@Injectable({ providedIn: 'root' })
export class MoveService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `postMoveCreate()` */
  static readonly PostMoveCreatePath = '/v1/pokedex/move';

  /**
   * Create a new move.
   *
   * Add a new move to the db.
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `postMoveCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  postMoveCreate$Response(params?: PostMoveCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<Move>> {
    return postMoveCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * Create a new move.
   *
   * Add a new move to the db.
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `postMoveCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  postMoveCreate(params?: PostMoveCreate$Params, context?: HttpContext): Observable<Move> {
    return this.postMoveCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<Move>): Move => r.body)
    );
  }

}
