/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse204;
import io.swagger.model.Pokemon;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2025-08-01T21:13:43.527214351+02:00[Europe/Paris]")
@Validated
public interface PokedexApi {

    @Operation(summary = "Delete a pokemon knowing its entryNumber", description = "", tags={ "Pokemon" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "204", description = "", content = @Content(mediaType = "application/json", schema = @Schema(implementation = InlineResponse204.class))) })
    @RequestMapping(value = "/pokedex/pokemon/delete/{entryNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<InlineResponse204> deletePokemon(@Parameter(in = ParameterIn.PATH, description = "Entry number of the Pokemon to delete", required=true, schema=@Schema()) @PathVariable("entryNumber") Integer entryNumber);


    @Operation(summary = "Create a new pokemon", description = "Add a new pokemon to the db.", tags={ "Pokemon" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "Pokemon created successfully", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Pokemon.class))),
        
        @ApiResponse(responseCode = "400", description = "Invalid input") })
    @RequestMapping(value = "/pokedex/pokemon/create",
        produces = { "application/json" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Pokemon> postPokemonCreate(@Parameter(in = ParameterIn.DEFAULT, description = "Pokemon object that needs to be added", schema=@Schema()) @Valid @RequestBody Pokemon body);

}

